//= require components/jpeg_camera/swfobject
//= require components/jpeg_camera/canvas-to-blob
// require jpeg_camera/jpeg_camera
//= require components/jpeg_camera/jpeg_camera_no_flash

(function() {
  if($('#camera').length > 0) {
    var devices = [];
    var front = null;
    navigator.mediaDevices.enumerateDevices().then(loadDevices).catch(handleError);
    var camera;
    var snapshot;

    function loadDevices(deviceInfos) {
      for (var i = 0; i !== deviceInfos.length; ++i) {
        var deviceInfo = deviceInfos[i];
        if (deviceInfo.kind === 'videoinput') {
          devices.push(deviceInfo);
        }
      }

      if(devices.length > 1) {
        $('.next-stream').show();
        front = 'environment'
      }
      $('.camera-container').data('camera', front);
      start()
    }

    function start() {
      if(window.JpegCamera) {
        JpegCamera.DefaultOptions.swf_url = "<%= asset_path 'jpeg_camera/jpeg_camera.swf' %>";
        JpegCamera.DefaultOptions.shutter_mp3_url = "<%= asset_path 'jpeg_camera/shutter.mp3' %>";
        JpegCamera.DefaultOptions.shutter_ogg_url = "<%= asset_path 'jpeg_camera/shutter.ogg' %>";
        JpegCamera.DefaultOptions.csrf_token = $("meta[name=\"csrf-token\"]").attr("content");
      }
      camera = new JpegCamera("#camera", { front: front, shutter: false, mirror: (front === 'environment') });

      $('.camera-start').show();
//      camera = new JpegCamera("#camera", { front: front, shutter: false, mirror: true });
    }

    window.myVideo = { start: start };

    function handleError(error) {
      console.log('navigator.getUserMedia error: ', error);
    }

    function stopStream() {
      var stream = camera.stream;
      if (stream.stop) {
        stream.stop(); // idk what this does, left here for legacy reasons..?
      } else {
        stream.getTracks().forEach(function(track) { track.stop() })
      }
    }

    $('.camera-capture').on('click', function(event) {
      event.stopPropagation();
      snapshot = camera.capture().show();
      stopStream();

      $('.camera--capture').hide();
      $('.camera--submit').show();
      return false;
    });

    $('.camera-redo').on('click', function(event) {
      event.stopPropagation();
      camera = new JpegCamera("#camera", { front: front, shutter: false, mirror: (front === 'environment') });
      $('.camera--capture').show();
      $('.camera--submit').hide();
      return false;
    });

    $('.next-stream').on('click', function(event) {
      event.stopPropagation();
      front = (front === 'environment') ? 'user' : 'environment';
      $('.camera-container').data('camera', front);
      camera = new JpegCamera("#camera", { front: front, shutter: false, mirror: (front === 'environment') });
      return false;
    });

    $('.camera-save').click(function() {
      $('.camera--capture').hide();
      snapshot.upload({api_url: "/receipts.js"}).done(function(response) {
        $('.camera-actions').html(response);

        $('video').parent().html('');

        $('canvas').width($('canvas').width() / 4);
        $('canvas').height($('canvas').height() / 4);
        $('.camera-wrap').html($('canvas')).css({'padding-bottom': 'inherit'})
      }).fail(function(status_code, error_message, response) {
        alert("Upload failed with status " + status_code);
        $('.camera-redo').click();
      });
    });
  }
})($);
